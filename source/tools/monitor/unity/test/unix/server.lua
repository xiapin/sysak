---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/2/7 1:48 PM
---
package.path = package.path .. ";../../?.lua;"
local unistd = require("posix.unistd")
local socket = require("socket")
local system = require("common.system")

local pipe = "/tmp/udp"
if unistd.access(pipe) then
    print("unlink file.")
    unistd.unlink(pipe)
end

socket.unix = require("socket.unix")
local s = socket.unix.udp()
s:bind(pipe)

local pipe2 = "/tmp/udp2"
if unistd.access(pipe2) then
    print("unlink file.")
    unistd.unlink(pipe2)
end

local s2 = socket.unix.udp()
s2:bind(pipe2)

local servers = {s, s2}

while true do
    local canread, _, err = socket.select(servers, nil, 10)
    system:dump(canread)
    for _, sread in pairs(canread) do
        if type(sread) == "number" then
            break
        end
        local line, err = sread:receive()
        print(line)
    end

end

s:close()
unistd.unlink(pipe)

