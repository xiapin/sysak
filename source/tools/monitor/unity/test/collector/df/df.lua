---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/1/29 2:58 PM
---

package.path = package.path .. ";../../../common/?.lua;"
local statvfs = require "posix.sys.statvfs".statvfs
local pystring = require("pystring")
local system = require("system")

function get_lines(fName)
    local lines = {}
    local fName = fName or "/proc/mounts"

    local f = assert(io.open(fName, "r"))
    for line in f:lines() do
        table.insert(lines, line)
    end
    return lines
end

function insert_point(tIn, ps)
    local ret = pystring:split(ps, " ", 3)
    tIn[ret[2]] = ret[1]
end

function insert_dev_point(tIn, tDev, ps)
    local ret = pystring:split(ps, " ", 3)
    if system:valueIsIn(tDev, ret[1]) then
        return
    end
    table.insert(tDev, ret[1])
    tIn[ret[2]] = ret[1]
end

function get_point(fName)
    local lines = get_lines(fName)
    local lOut = {"devtmpfs", "tmpfs", "shm"}
    local tDev = {}
    local ret = {}
    for _, line in ipairs(lines) do
        for _, t in ipairs(lOut) do
            if pystring:startswith(line, t) then
                insert_point(ret, line)
                goto continue
            end
        end
        if pystring:startswith(line, "/dev/") then
            insert_dev_point(ret, tDev, line)
        end
        ::continue::
    end
    if not system:keyIsIn(ret, "/") then
        ret["/"] = "root"
    end
    return ret
end

function walk_fs()
    local fsd = get_point()
    for k, v in pairs(fsd) do
        local stat = statvfs(k)
        print(k, stat.f_bsize, stat.f_blocks, stat.f_bfree, stat.f_ffree)
    end
end

walk_fs()