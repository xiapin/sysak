---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/2/13 3:31 PM
---


local socket = require("socket")
local system = require("common.system")
require("common.class")

local Cbeavers = class("beavers")

function Cbeavers:_init_(port, tmo, ip, backlog)
    port = port or 8398
    self._tmo = tmo or 10

    self._server = self:_install_server(port, ip, backlog)

    self._ss = {}
    self._cos = {}
    -- self._tmo = {}
    table.insert(self._ss, self._server)
end

function Cbeavers:_del_()
    for _, s in ipairs(self._ss) do
        s:close()
    end
    print("release server.")
end

function Cbeavers:_install_server(port, ip, backlog)
    ip = ip or "localhost"
    backlog = backlog or 128

    local server = socket.tcp()
    local res, err = server:bind(ip, port)

    if res ~= 1 then
        server:close()
        error("bind return: " .. err)
    end

    res, err = server:listen(backlog)
    if res ~= 1 then
        server:close()
        error("listen return: " .. err)
    end

    return server
end

function Cbeavers:co_exit(s)
    table.remove(self._cts, s:getfd())
    local index = system:valueIndex(self._ss, s)
    if index > 0 then
        table.remove(self._cts, index)
    end
end

function Cbeavers:_proc(s)
    print("thread start.")
    _, s = coroutine.yield()
    print("thread next.")
    s:settimeout(0, '')
    while true do
        local line, err = s:receive("*")
        print("thread read.")
        print(line, err, s:getfd())
        if line then
            s:send("echo: " .. line)
            coroutine.yield()
        else
            print("co exit.." .. err)
            s:close()
            self:co_exit(s)
            break
        end
    end
end

function Cbeavers:poll()
    while true do
        local reads, _, err = socket.select(self._ss, nil)
        if err then
            print("socket select return " .. err)
        end
        local c = 0
        for _, read in pairs(reads) do
            if type(read) == "number" then
                break
            elseif read == self._server then
                local s = read:accept()
                print("accept " .. s:getfd())
                c = c + 1
                self._ss[c] = s
                local co = coroutine.create(function(o, s)  self._proc(o, s) end)
                self._cos[s:getfd()] = co
                coroutine.resume(co, self, s)
            else
                print("read " .. read:getfd())
                local co = self._cos[read:getfd()]
                coroutine.resume(co, self, read)
            end
        end
    end
end

return Cbeavers