---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/2/10 4:07 PM
---

require("common.class")
local system = require("common.system")
local socket = require("socket")

local Cidentity = class("identity")

function Cidentity:_init_(fYaml)
    local conf = system:parseYaml(fYaml)
    self._opts = conf.config.identity
    self._funcs = {
        hostip = function() return self:hostip() end,
        curl = function() return self:curl()  end,
        hostname = function() return self:hostname()  end,
        file = function() return self:file()  end,
        specify = function() return self:specify()  end
    }
end

local function getAdd(hostName)
    local _, resolved = socket.dns.toip(hostName)
    local listTab = {}
    for i, v in pairs(resolved.ip) do
        listTab[i] = v
    end
    return listTab
end

function Cidentity:hostip()
    local res = getAdd(socket.dns.gethostname())
    if type(res) == "table" and #res >= 1 then
        return res[1]
    else
        return "None"
    end
end

function Cidentity:curl()
    if self._opts.url then
        local ChttpCli = require("httplib.httpCli")

        local cli = ChttpCli.new()
        local res = cli:get(self._opts.url)
        return res.body
    else
        return "None"
    end
end

function Cidentity:hostname()
    return socket.dns.gethostname()
end

function Cidentity:file()
    local res = "None"
    if self._opts.path then
        local file = io.open(self._opts.path, "r")
        if file then
            io.input(file)
            res = io.read()
            io.close(file)
        end
    end
    return res
end

function Cidentity:specify()
    if self._opts.name then
        return self._opts.name
    else
        return "None"
    end
end

function Cidentity:id()
    return self._funcs[self._opts.mode]()
end

return Cidentity
