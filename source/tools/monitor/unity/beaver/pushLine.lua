---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/4/24 01:34
---

require("common.class")
local system = require("common.system")
local CprotoData = require("common.protoData")
local lineParse = require("common.lineParse")
local pystring = require("common.pystring")

local CpushLine = class("CpushLine")

function CpushLine:_init_(que)
    self._proto = CprotoData.new(que)
end

local function trans(title, ls, vs, log)
    local labels = {}
    local values = {}
    local logs = {}

    local c = 0
    for k, v in pairs(ls) do
        c = c + 1
        labels[c] = {name=k, index=v}
    end
    c = 0
    for k, v in pairs(vs) do
        c = c + 1
        values[c] = {name=k, value=v}
    end
    c = 0
    for k, v in pairs(log) do
        c = c + 1
        logs[c] = {name=k, log=v}
    end
    return {line = title, ls = labels, vs = values, log = logs}
end

function CpushLine:procLine(line)
    return trans(lineParse.parse(line))
end

function CpushLine:procLines(stream)
    local ss = pystring:split(stream, "\n")
    local lines = self._proto:protoTable()

    for _, line in ipairs(ss) do
        table.insert(lines.lines, self:procLine(line))
    end
    local bytes = self._proto:encode(lines)
    self._proto:que(bytes)
    return 0
end

return CpushLine