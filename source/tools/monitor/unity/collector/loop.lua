---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2022/12/16 10:39 PM
---

require("common.class")
local CprotoData = require("common.protoData")
local procffi = require("collector.native.procffi")
local Cplugin = require("collector.plugin")
local system = require("common.system")

local Cloop = class("loop")

function Cloop:_init_(que, proto_q, fYaml)
    local res = system:parseYaml(fYaml)
    self._proto = CprotoData.new(que)
    self:loadLuaPlugin(res, res.config.proc_path)
    self._plugin = Cplugin.new(self._proto, procffi, que, proto_q, fYaml)
end

function Cloop:loadLuaPlugin(res, proc_path)
    local luas = res.luaPlugins

    self._procs = {}
    if res.luaPlugins then
        for i, plugin in ipairs(luas) do
            local CProcs = require("collector." .. plugin)
            self._procs[i] = CProcs.new(self._proto, procffi, proc_path)
        end
    end
    print("add " .. #self._procs .. " lua plugin.")
end

function Cloop:work(t)
    local lines = self._proto:protoTable()
    for _, obj in pairs(self._procs) do
        obj:proc(t, lines)
    end
    self._plugin:proc(t, lines)
    local bytes = self._proto:encode(lines)
    self._proto:que(bytes)
end

return Cloop
