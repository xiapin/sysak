---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2022/12/16 10:39 PM
---

require("common.class")
local CprotoData = require("common.protoData")
local procffi = require("collector.native.procffi")
local Cplugin = require("collector.plugin")
local system = require("common.system")
local calcJiffies = require("collector.calcJiffies")
local CcollectorStat = require("collector.guard.collector_stat")

local Cloop = class("loop")

function Cloop:_init_(que, proto_q, fYaml, tid)
    local res = system:parseYaml(fYaml)

    self._proto = CprotoData.new(que)
    self._tid = tid
    self._jiffies = calcJiffies.calc(res.config.proc_path, procffi)
    self._collectorStat = CcollectorStat.new(tid)
    print(string.format("setup jiffies %f, for tid: %d", self._jiffies, self._tid))

    self:loadLuaPlugin(res, res.config.proc_path)
    self._plugin = Cplugin.new(self._proto, procffi, que, proto_q, fYaml)
end

function Cloop:loadLuaPlugin(res, proc_path)
    local luas = res.luaPlugins

    self._procs = {}
    if res.luaPlugins then
        for _, plugin in ipairs(luas) do
            local CProcs = require("collector." .. plugin)
            self._procs[plugin] = CProcs.new(self._proto, procffi, proc_path)
        end
    end
    print("add " .. system:keyCount(self._procs) .. " lua plugin.")
end


function Cloop:work(t)
    local lines = self._proto:protoTable()
    local del = {}
    local tLast = lua_local_clock()
    local tNow

    print(self._collectorStat:jiffies())
    for _, obj in pairs(self._procs) do
        obj:proc(t, lines)
        tNow = lua_local_clock()
    end
    self._plugin:proc(t, lines)
    local bytes = self._proto:encode(lines)
    self._proto:que(bytes)
end

return Cloop
