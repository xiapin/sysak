---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/3/7 10:08 PM
---

require("common.class")
local pystring = require("common.pystring")
local CvProc = require("collector.vproc")

local Csoftirqs = class("softirqs", CvProc)

function Csoftirqs:_init_(proto, pffi, mnt, pFile)
    CvProc._init_(self, proto, pffi, mnt, pFile or "proc/softirqs")
end

function Csoftirqs:proc(elapsed, lines)
    local c = 0
    CvProc.proc(self)
    local sirqs = {}
    for line in io.lines(self.pFile) do
        if c > 0 then
            local title, irq_str = unpack(pystring:split(line, ":", 1))
            title = string.lower(pystring:strip(title))
            sirqs[title] = pystring:split(pystring:strip(irq_str))
        end
        c = c + 1
    end

    local per_sirqs = {}
    for k, irqs in pairs(sirqs) do
        for i, v in ipairs(irqs) do
            if per_sirqs[i] == nil then
                per_sirqs[i] = {}
            end
            per_sirqs[i][k] = tonumber(v)
        end
    end

    for i, irq in ipairs(per_sirqs) do
        local ls = {
            name = "cpu", index = "cpu" .. (i - 1)
        }
        local c = 1
        local values = {}
        for k, v in pairs(irq) do
            values[c] = {
                name = k,
                value = v,
            }
            c = c + 1
        end
        self:appendLine(self:_packProto("per_sirqs", {ls}, values))
    end
    self:push(lines)
end

return Csoftirqs
