---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/3/25 4:21 PM
---

require("common.class")
local CprotoData = require("common.protoData")
local postQue = require("beeQ.postQue.postQue")
local CvProto = require("collector.vproto")
local pystring = require("common.pystring")
local system = require("common.system")
local cjson = require("cjson.safe")

local Cengine = class("engine", CvProto)

function Cengine:_init_(que, proto_q, fYaml, tid)
    CvProto._init_(self, CprotoData.new(que))
    self._fYaml = fYaml
    self._tid  = tid
    self._task = nil
end

function Cengine:setTask(taskMons)
    self._task = taskMons
end

function Cengine:pushTask(msgs)
    local events = pystring:split(msgs, '\n')
    for _, msg in ipairs(events) do
        print(msg)
        local res = cjson.decode(msg)
        if res.cmd == "mon_pid" then
            self._task:add(res.pid, res.loop)
        end
    end
end

function Cengine:proc(t, event, msgs)
    local lines = self._proto:protoTable()

    CvProto.proc(self, t)

    self:packLog("post_que", "post", cjson.encode(msgs))
    local bytes = self._proto:encode(lines)
    self._proto:que(bytes)

    self:pushTask(msgs)
end

function Cengine:work(t, event)
    local msgs = postQue.pull()
    if msgs then
        self:proc(t, event, msgs)
    end
end

return Cengine
