---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wrp.
--- DateTime: 2023/7/24 09:54
---

local lfs = require("lfs")
local pystring = require("common.pystring")
local obHelper = {}

function obHelper:getPidByComm(comm)
    local pids={}
    local c = 1
    local path = "/proc/"
    for file in lfs.dir(path) do
        -- just need file named by numbers
        for i = 1, string.len(file) do
            if string.byte(string.sub(file, i, i)) < 48 or string.byte(string.sub(file, i, i)) > 57 then
                goto continue
            end
        end

        local fInfo = io.open(path..file.."/comm")
        if fInfo == nil then
            goto continue
        end

        for line in fInfo:lines() do
            if line == comm then
                pids[c] = tonumber(file)
                c = c + 1
            end
        end
        fInfo:close()
        ::continue::
    end
    return pids
end

function obHelper:getCmdlinePort(pid)
    local res = -1
    local path = "/proc/"..pid.."/cmdline"
    for line in io.lines(path) do
        local start, stop = string.find(line, "--port")
        local substring = string.sub(line, stop+1, -1)
        local port = string.match(substring, "%d+")
        if port then
            res = tonumber(port)
        end
    end
    return res
end

function obHelper:getCgroupSystemd(pid)
    local path = "/proc/"..pid.."/cgroup"
    local res = "NULL"
    for line in io.lines(path) do
        local sublines = pystring:split(line, ":")
        if sublines[1] == "1" and sublines[2] == "name=systemd" then
            for cname in string.gmatch(sublines[3], "%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x*") do
                res = cname
                res = string.sub(res, 1, 12)
            end
        end
    end

    return res
end

return obHelper
