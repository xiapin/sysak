---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/3/7 8:43 PM
---

require("common.class")
local pystring = require("common.pystring")
local CvProc = require("collector.vproc")

local CsoftnetStat = class("softnetStat", CvProc)

-- refer to https://insights-core.readthedocs.io/en/latest/shared_parsers_catalog/softnet_stat.html
function CsoftnetStat:_init_(proto, pffi, mnt, pFile)
    CvProc._init_(self, proto, pffi, mnt, pFile or "proc/net/softnet_stat")
end

function CsoftnetStat:proc(elapsed, lines)
    local c = 0
    CvProc.proc(self)
    local softnets = {}
    for line in io.lines(self.pFile) do
        local cell = {}
        local cells = pystring:split(line)
        cell.packet_process = tonumber(cells[1], 16)
        cell.packet_drop = tonumber(cells[2], 16)
        cell.time_squeeze = tonumber(cells[3], 16)
        cell.cpu_collision = tonumber(cells[9], 16)
        cell.received_rps = tonumber(cells[10], 16)
        cell.flow_limit_count = tonumber(cells[11], 16)
        c = c + 1
        softnets[c] = cell
    end

    for i, cpus in ipairs(softnets) do
        local ls = {
            name = "cpu", index = tostring(i)
        }
        local c = 1
        local values = {}
        for k, v in pairs(cpus) do
            values[c] = {
                name = k,
                value = v,
            }
            c = c + 1
        end
        self:appendLine(self:_packProto("softnets", {ls}, values))
    end
    self:push(lines)
end

return CsoftnetStat
