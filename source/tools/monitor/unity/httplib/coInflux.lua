---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/4/5 23:49
---

require("common.class")
local CcoHttpCli = require("httplib.coHttpCli")
local pystring = require("common.pystring")
local lineParse = require("common.lineParse")

local CcoInflux = class("coInflux", CcoHttpCli)

function CcoInflux:_init_(fYaml)
    CcoHttpCli._init_(self, fYaml)
end

function CcoInflux:echo(tReq)
    if tReq.code ~= "204" then
        print(tReq.code, tReq.data)
    end
end

function CcoInflux:trans(msgs, body, filter)
    local res
    local c = 0
    local lines
    local bodies = {}

    lines = msgs.lines
    for _, line in ipairs(lines) do
        c = c + 1
        self:addInstance(line)
        bodies[c] = lineParse.packs(line)
    end

    res = pystring:join("\n", bodies)
    if body and #body > 0 then
        return pystring:join("\n", {body, res})
    else
        return res
    end
end

function CcoInflux:pack(body)
    local line = self:packCliHead('POST', self._url)
    local head = {
        Host = self._host,
        ["Content-Type"] = "text/plain",
        ["Content-Length"] = #body,
    }
    local heads = self:packCliHeaders(head)
    return pystring:join("\r\n", {line, heads, body})
end

return CcoInflux
