---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/4/10 00:50
---

require("common.class")

local psocket = require("posix.sys.socket")
local unistd = require("posix.unistd")
local Cping = class("ping")

function Cping:_init_(ip, dev)
    assert(psocket.SOCK_RAW and psocket.SO_BINDTODEVICE, "not support raw socket yet.")
    self.ip = ip

    local fd, err = psocket.socket(psocket.AF_INET, psocket.SOCK_RAW, psocket.IPPROTO_ICMP)
    assert(fd, err)

    local ok, err = psocket.setsockopt(fd, psocket.SOL_SOCKET, psocket.SO_BINDTODEVICE, dev)
    assert(ok, err)

    self.fd = fd
end

function Cping:_del_()
    if self.fd then
        unistd.close(self.fd)
    end
end

function Cping:ping()
    local data = string.char(0x08, 0x00, 0x89, 0x98, 0x6e, 0x63, 0x00, 0x04, 0x00)
    local ok, err = psocket.sendto(self.fd, data, {family=psocket.AF_INET, addr=self.ip, port=0})
    assert(ok, err)

    local data, sa = psocket.recvfrom(self.fd, 1024)
    assert(data, sa)

    if data then
        print('Received ICMP message from ' .. sa.addr)
    end
end

return Cping
