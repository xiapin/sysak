---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/3/29 9:08 PM
---

require("common.class")

local Cfifo = class("fifo")

function Cfifo:_init_(maxLen)
    self._max = maxLen or 16
    self.list = {}
    self._head = 0
    self._tail = -1
    self._count = 0
end

function Cfifo:push(v)
    local tail = self._tail + 1
    local count = self._count + 1
    self._tail = tail
    self._count = count

    self.list[tail] = v
    if count > self._max then
        self:pop()
    end
end

function Cfifo:pop()
    local count = self._count
    if count == 0 then
        return nil
    else
        local head = self._head
        local v = self.list[head]
        self.list[head] = nil
        self._head = head + 1
        self._count = count - 1
        return v
    end
end

function Cfifo:len()
    return self._count
end

function Cfifo:value(index)
    index = index + self._head - 1
    return self.list[index]
end

function Cfifo:toList()
    local c = 0
    local res = {}
    for _, v in pairs(self.list) do
        c = c + 1
        res[c] = v
    end
    return res
end

return Cfifo
