---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2022/12/16 6:05 PM
---

require("common.class")
local pb = require("pb")
local protoc = require("protoc")
local serpent = require("common.serpent")

local CprotoData = class("CprotoData")

function CprotoData:_init_(que)
    self._pc = protoc:new()
    self._que = que
    assert(self._pc:load[[
            message labels {
                required string name   = 1;
                required string index  = 2;
                }
            message values {
                required string name   = 1;
                required double value  = 2;
                }
            message logs {
                required string name   = 1;
                required string log    = 2;
                }
            message  dataLine{
                required string line = 1;
                repeated labels  ls  = 2;
                repeated values  vs  = 3;
                repeated logs   log  = 4;
                }
            message  dataLines{
                repeated dataLine  lines = 1;
                }
            ]])
end

function CprotoData:encode(lines)
    --print(serpent.block(data))
    return assert(pb.encode("dataLines", lines))
end

function CprotoData:decode(bytes)
    return assert(pb.decode("dataLines", bytes))
end

function CprotoData:showProto(bytes)
    local data = assert(pb.decode("dataLines", bytes))
    return serpent.block(data)
end

function CprotoData:protoTable()
    return {lines = {}}
end

function CprotoData:que(bytes)
    collector_qout(self._que, bytes, #bytes)
end

return CprotoData
